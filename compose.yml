x-kamailio: &kamailio
  image: ghcr.io/kamailio/kamailio-ci:master-alpine
  command: -f /etc/ims/kamailio.cfg
  dns: ${DNS}

services:
  scscf:
    << : *kamailio
    configs:
    - source: scscf
      target: /etc/ims/kamailio.cfg
    - source: scscf.diameter
      target: /etc/ims/diameter.xml

  dns:
    image: coredns/coredns
    command: -conf /etc/coredns/Corefile
    configs:
    - source: dns
      target: /etc/coredns/Corefile
    networks:
      default:
        ipv4_address: ${DNS}

  hss:
    command: sh /opt/start
    configs:
    - source: hss
      target: /etc/hss/open5gs.yaml
    - source: hss.diameter
      target: /etc/hss/diameter.conf
    - source: hss.start
      target: /opt/start
      mode: 0774
    expose:
    - 3868/tcp
    depends_on:
      mongo:
        condition: service_started
    build:
      context: .
      dockerfile_inline: |
        FROM alpine AS build
        RUN apk add alpine-sdk bison flex git cmake meson bash sudo linux-headers bsd-compat-headers yaml-dev lksctp-tools-dev gnutls-dev libgcrypt-dev libidn-dev mongo-c-driver-dev libmicrohttpd-dev curl-dev nghttp2-dev talloc-dev
        RUN git clone https://github.com/open5gs/open5gs
        WORKDIR open5gs
        RUN meson build --prefix=/opt
        RUN ninja -C build install

        FROM alpine
        RUN apk add yaml lksctp-tools gnutls libgcrypt libidn mongo-c-driver libmicrohttpd curl nghttp2 talloc
        RUN apk add openssl
        COPY --from=build /opt /opt

  ui:
    profiles:
    - ui
    working_dir: /open5gs/webui
    command: npm run dev
    environment:
      DB_URI: mongodb://mongo/open5gs
      HOSTNAME: 0.0.0.0
    ports:
    - 9999:9999
    depends_on:
      mongo:
        condition: service_started
    build:
      context: .
      dockerfile_inline: |
        FROM alpine AS build
        RUN apk add git
        RUN git clone https://github.com/open5gs/open5gs

        FROM alpine
        RUN apk add nodejs npm
        COPY --from=build /open5gs/webui /open5gs/webui
        RUN cd /open5gs/webui && npm ci

  mongo:
    image: mongo:8.0
    command: --bind_ip 0.0.0.0
    expose:
    - 27017/udp
    - 27017/tcp

  test:
    command: sleep inf
    build:
      context: .
      dockerfile_inline: |
        FROM ubuntu:jammy AS build

        RUN apt update && apt install -y --no-install-recommends \
        git build-essential cmake libtool yasm \
        ragel \
        libsrtp2-dev libssl-dev libopus-dev \
        libspeexdsp-dev \
        libavutil-dev libswscale-dev libavcodec-dev \
        libvpx-dev libyuv-dev libgsm1-dev swig \
        python3-dev  python3-pip
        RUN git clone https://github.com/lyatanski/doubango.git
        WORKDIR doubango
        RUN cmake -B out
        RUN cmake --build out


configs:
  scscf:
    file: scscf/kamailio.cfg

  scscf.diameter:
    file: scscf/diameter.xml

  dns:
    content: |
      . {
          errors
          log
          health {
             lameduck 5s
          }
          ready
          template IN ANY mnc${MNC-001}.mcc${MCC-001}.3gppnetwork.org {
              match (^|[.])(?P<name>[^.]*).*
              answer "{{ .Name }} 1D IN CNAME {{ .Group.name }}."
              fallthrough
          }
          forward . /etc/resolv.conf
          cache 30
          loop
          reload
          loadbalance
      }

  hss.start:
    content: |
      P=/etc/hss/
      openssl req -new -batch -x509 -days 3650 -nodes -newkey rsa:1024 -out $$P/crt.pem -keyout $$P/key.pem -subj /CN=hss.epc.mnc${MNC}.mcc${MCC}.3gppnetwork.org
      sleep 3
      /opt/bin/open5gs-hssd -c /etc/hss/open5gs.yaml -t

  hss:
    content: |
      db_uri: mongodb://mongo/open5gs
      hss:
        freeDiameter: /etc/hss/diameter.conf
          #identity: hss.epc.mnc${MNC}.mcc${MCC}.3gppnetwork.org
          #load_extension:
          #- module: /opt/lib/freeDiameter/dbg_msg_dumps.fdx
          #  conf: 0x4444
          #- module: /opt/lib/freeDiameter/dict_rfc5777.fdx
          #- module: /opt/lib/freeDiameter/dict_mip6i.fdx
          #- module: /opt/lib/freeDiameter/dict_nasreq.fdx
          #- module: /opt/lib/freeDiameter/dict_nas_mipv6.fdx
          #- module: /opt/lib/freeDiameter/dict_dcca.fdx
          #- module: /opt/lib/freeDiameter/dict_dcca_3gpp.fdx
      logger:
        file:
          path: /var/log/hss.log
      global:
        max:
          ue: 1024

  hss.diameter:
    content: |
      Identity = "hss.epc.mnc${MNC}.mcc${MCC}.3gppnetwork.org";
      No_SCTP;
      TLS_Cred = "/etc/hss/crt.pem", "/etc/hss/key.pem";
      TLS_CA = "/etc/hss/crt.pem";

      LoadExtension = "/opt/lib/freeDiameter/dbg_msg_dumps.fdx" : "0x4444";
      LoadExtension = "/opt/lib/freeDiameter/dict_rfc5777.fdx";
      LoadExtension = "/opt/lib/freeDiameter/dict_mip6i.fdx";
      LoadExtension = "/opt/lib/freeDiameter/dict_nasreq.fdx";
      LoadExtension = "/opt/lib/freeDiameter/dict_nas_mipv6.fdx";
      LoadExtension = "/opt/lib/freeDiameter/dict_dcca.fdx";
      LoadExtension = "/opt/lib/freeDiameter/dict_dcca_3gpp.fdx";

      ConnectPeer = "scscf.ims.mnc${MNC}.mcc${MCC}.3gppnetwork.org" { No_TLS; };

networks:
  default:
    ipam:
      config:
        - subnet: 192.168.69.0/24
