include:
- core.yml


x-kamailio: &kamailio
  image: kamailio
  command: -f /etc/ims/kamailio.cfg
  dns: ${DNS}

services:
  pcscf:
    << : *kamailio
    environment:
      DOMAIN: mnc${MNC}.mcc${MCC}.3gppnetwork.org
    configs:
    - source: pcscf.cfg
      target: /etc/ims/kamailio.cfg
    - source: pcscf.xml
      target: /etc/ims/diameter.xml
    depends_on:
      kmod:
        condition: service_completed_successfully
    build:
      context: .
      dockerfile_inline: |
        FROM alpine:edge
        RUN apk add kamailio-ims kamailio-mysql kamailio-presence kamailio-debugger
        ENTRYPOINT ["kamailio", "-DD", "-E"]

  icscf:
    << : *kamailio
    environment:
      EPC_REALM: epc.mnc${MNC}.mcc${MCC}.3gppnetwork.org
    configs:
    - source: icscf.cfg
      target: /etc/ims/kamailio.cfg
    - source: icscf.xml
      target: /etc/ims/diameter.xml
    depends_on:
      dbprep:
        condition: service_completed_successfully

  scscf:
    << : *kamailio
    environment:
      EPC_REALM: epc.mnc${MNC}.mcc${MCC}.3gppnetwork.org
      SRV_NAME: sip:scscf.ims.mnc${MNC}.mcc${MCC}.3gppnetwork.org:5060
    configs:
    - source: scscf.cfg
      target: /etc/ims/kamailio.cfg
    - source: scscf.xml
      target: /etc/ims/diameter.xml

  dns:
    image: coredns/coredns
    command: -conf /etc/coredns/Corefile
    configs:
    - source: dns
      target: /etc/coredns/Corefile
    networks:
      default:
        ipv4_address: ${DNS}

  ## as UE IPs will not be in the setup IP range, they need special attention
  ## TODO: to be relevant when PGW is involved
  #route:
  #  image: alpine
  #  command: ip route add ${POOL} via ${SGI}
  #  network_mode: service:pcscf
  #  cap_add:
  #  - NET_ADMIN

  kmod:
    image: alpine
    command:
    - modprobe
    - -a
    - ah4
    - ah6
    - esp4
    - esp6
    - xfrm4_tunnel
    - xfrm6_tunnel
    - xfrm_user
    - ip_tunnel
    - tunnel4
    - tunnel6
    cap_add:
    - SYS_MODULE
    volumes:
    - /lib/modules:/lib/modules

  dbprep:
    image: mariadb
    command:
    - sh
    - -c
    - mariadb --skip-ssl --host maria < /opt/icscf.sql
    tmpfs:
    - /var/lib/mysql
    configs:
    - source: icscf.sql
      target: /opt/icscf.sql
    restart: on-failure

  maria:
    image: mariadb
    environment:
      MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: true
    tmpfs:
    - /var/lib/mysql

  test:
    profiles:
    - test
    command: python3 /opt/test.py pcscf ims.mnc${MNC}.mcc${MCC}.3gppnetwork.org
    environment:
    - IMSI
    - MSISDN
    - K
    - OPC
    build:
      context: .
      dockerfile_inline: |
        FROM ubuntu:jammy AS build

        RUN apt update && apt install -y --no-install-recommends \
        git build-essential cmake libtool yasm \
        ragel \
        libsrtp2-dev libssl-dev libopus-dev \
        libspeexdsp-dev \
        libavutil-dev libswscale-dev libavcodec-dev \
        libvpx-dev libyuv-dev libgsm1-dev swig \
        python3-dev  python3-pip
        RUN git clone --depth=1 https://github.com/lyatanski/doubango.git
        WORKDIR doubango
        RUN cmake -B out
        RUN cmake --build out

        FROM ubuntu:jammy
        RUN apt update && apt install -y python3-pip iproute2
        COPY --from=build /doubango/out/_deps/libmnl/usr/lib/libmnl.so* /usr/local/lib/
        COPY --from=build /doubango/out/bindings/python/ /opt/python
        COPY --from=build /doubango/out/plugins/ipsec_linux/ipsec.so /opt/
        RUN ldconfig && pip install /opt/python
    configs:
    - source: test.py
      target: /opt/test.py


configs:
  pcscf.cfg:
    file: pcscf.cfg

  pcscf.xml:
    content: |
      <?xml version="1.0" encoding="UTF-8"?>
      <DiameterPeer
          FQDN="pcscf.ims.mnc${MNC}.mcc${MCC}.3gppnetwork.org"
          Realm="ims.mnc${MNC}.mcc${MCC}.3gppnetwork.org"
          Vendor_Id="10415"
          Product_Name="CDiameterPeer"
          Workers="1"
      >
              <Peer
                  FQDN="pcrf.epc.mnc${MNC}.mcc${MCC}.3gppnetwork.org"
                  Realm="epc.mnc${MNC}.mcc${MCC}.3gppnetwork.org"
                  port="3868"
              />
              <Auth id="16777236" vendor="10415"/> <!-- Rx 3GPP -->
              <SupportedVendor vendor="10415" />
              <DefaultRoute FQDN="pcrf.epc.mnc${MNC}.mcc${MCC}.3gppnetwork.org" metric="1"/>
      </DiameterPeer>

  icscf.cfg:
    file: icscf.cfg

  icscf.xml:
    content: |
      <?xml version="1.0" encoding="UTF-8"?>
      <DiameterPeer
          FQDN="icscf.ims.mnc${MNC}.mcc${MCC}.3gppnetwork.org"
          Realm="ims.mnc${MNC}.mcc${MCC}.3gppnetwork.org"
          Vendor_Id="10415"
          Product_Name="CDiameterPeer"
          Workers="1"
      >
              <Peer
                  FQDN="hss.epc.mnc${MNC}.mcc${MCC}.3gppnetwork.org"
                  Realm="epc.mnc${MNC}.mcc${MCC}.3gppnetwork.org"
                  port="3868"
              />
              <Auth id="16777216" vendor="10415"/> <!-- Cx 3GPP -->
              <SupportedVendor vendor="10415" />
              <DefaultRoute FQDN="hss.epc.mnc${MNC}.mcc${MCC}.3gppnetwork.org" metric="1"/>
      </DiameterPeer>

  icscf.sql:
    content: |
      CREATE DATABASE IF NOT EXISTS icscf;
      USE icscf;
      CREATE TABLE IF NOT EXISTS nds_trusted_domains (
        id int(11) NOT NULL AUTO_INCREMENT,
        trusted_domain varchar(83) NOT NULL DEFAULT '',
        PRIMARY KEY (id)
      );
      CREATE TABLE IF NOT EXISTS s_cscf_capabilities (
        id int(11) NOT NULL AUTO_INCREMENT,
        id_s_cscf int(11) NOT NULL DEFAULT 0,
        capability int(11) NOT NULL DEFAULT 0,
        PRIMARY KEY (id),
        KEY idx_capability (capability),
        KEY idx_id_s_cscf (id_s_cscf)
      );
      CREATE TABLE IF NOT EXISTS s_cscf (
        id int(11) NOT NULL AUTO_INCREMENT,
        name varchar(83) NOT NULL DEFAULT '',
        s_cscf_uri varchar(83) NOT NULL DEFAULT '',
        PRIMARY KEY (id)
      );
      INSERT IGNORE INTO s_cscf (s_cscf_uri) VALUES ('sip:scscf.ims.mnc${MNC}.mcc${MCC}.3gppnetwork.org:5060');

  scscf.cfg:
    file: scscf.cfg

  scscf.xml:
    content: |
      <?xml version="1.0" encoding="UTF-8"?>
      <DiameterPeer
          FQDN="scscf.ims.mnc${MNC}.mcc${MCC}.3gppnetwork.org"
          Realm="ims.mnc${MNC}.mcc${MCC}.3gppnetwork.org"
          Vendor_Id="10415"
          Product_Name="CDiameterPeer"
          Workers="1"
      >
              <Peer
                  FQDN="hss.epc.mnc${MNC}.mcc${MCC}.3gppnetwork.org"
                  Realm="epc.mnc${MNC}.mcc${MCC}.3gppnetwork.org"
                  port="3868"
              />
              <Auth id="16777216" vendor="10415"/> <!-- Cx 3GPP -->
              <Auth id="4"        vendor="10415"/> <!-- Ro 3GPP -->
              <SupportedVendor vendor="10415" />
              <DefaultRoute FQDN="hss.epc.mnc${MNC}.mcc${MCC}.3gppnetwork.org" metric="1"/>
      </DiameterPeer>

  dns:
    content: |
      . {
          errors
          log
          health {
             lameduck 5s
          }
          ready
          template IN SRV {
              match .*ims\.mnc\d{2,3}\.mcc\d{3}\.3gppnetwork.org
              answer "{{ .Name }} 1D SRV 0 0 5060 icscf."
              fallthrough
          }
          template IN ANY {
              match (^|[.])(?P<name>[^.]*).*\.mnc\d{2,3}\.mcc\d{3}\.3gppnetwork.org
              answer "{{ .Name }} 1D IN CNAME {{ .Group.name }}."
              fallthrough
          }
          forward . /etc/resolv.conf
          cache 30
          loop
          reload
          loadbalance
      }

  test.py:
    file: test.py


networks:
  default:
    ipam:
      config:
        - subnet: 192.168.69.0/24
