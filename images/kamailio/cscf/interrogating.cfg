#!KAMAILIO
# Interrogating Call Session Control Function (I-CSCF)
# Diameter Cx: 3GPP TS 29.229

#!defenvs DBURL
#!defexps DB_URL "redis://" + DBURL
#!defenvs REALM
#!defexps SERVER    "icscf.ims." + REALM
#!defexps EPC_REALM "epc." + REALM
#!define HEALTH cdp_has_app("16777216")

#listen = [::]:5060 advertise SERVER name "Mw"
listen = 0.0.0.0:5060 advertise SERVER name "Mw"
user_agent_header = "User-Agent: Interrogating-CSCF"
server_header = "Server: Interrogating-CSCF"
children = 1
debug = 3

loadmodule "tm"
loadmodule "pv"
loadmodule "sl"
loadmodule "cdp"
loadmodule "cdp_avp"
loadmodule "db_redis"
loadmodule "ims_icscf"
loadmodule "textops"
loadmodule "xlog"
loadmodule "debugger"

import_file "monitor.cfg"

modparam("debugger", "cfgtrace", 1)
modparam("debugger", "log_level", 3) # L_DBG

modparam("cdp", "config_file", "/etc/cscf/diameter.xml")
modparam("ims_icscf", "db_url", DB_URL)
modparam("db_redis", "schema_path", "/etc/cscf/schema/interrogating")
modparam("db_redis", "keys", "s_cscf=entry:name")

# Diameter Cx: User-Authorization-Request (UAR) & Location-Info-Request (LIR)
modparam("ims_icscf", "cxdx_dest_realm", EPC_REALM)           # Destination-Realm AVP

request_route {
	if(is_method("REGISTER")) route(REGISTER);

	if(is_method("INVITE|SUBSCRIBE|MESSAGE|INFO|PUBLISH|CANCEL")) {
		I_perform_location_information_request("LIA", "0");
	} else {
		xerr("Misconfiguration! Method '$rm' not allowed at the I-CSCF\n");
		append_to_reply("Allow: INVITE,SUBSCRIBE,MESSAGE,INFO,PUBLISH,CANCEL\r\n");
		send_reply("406","Initial Request Method not allowed at the I-CSCF");
	}
}

route[REGISTER] {
	if(I_scscf_select("0")) {
		# S-CSCF list exist, no need to do a UAR
		route(RELAY);
	} else {
		# no S-CSCF list therefore must do UAR
		# free this from the failed I_scscf_select call
		I_scscf_drop();

		# Asynchronous UAR
		# 0=do not request capabilities; 1=request capabilities
		if(!I_perform_user_authorization_request("UAA", "0")) {
			send_reply("500", "Error in Request");
		}
	}
	exit;
}

# Diameter: User-Authorization-Answer (UAA)
#     user authorization and S-CSCF URI discovery
route[UAA] {
	xinfo("UAR return code: $avp(s:uaa_return_code)\n");
	if($avp(s:uaa_return_code) != 1) {
		send_reply("500", "UAR failed");
		exit;
	}

	route(SELECT);
}

# Diameter: Location-Info-Answer (LIA)
#     request routing information - S-CSCF URI
route[LIA] {
	xinfo("LIR return code: $avp(lia_return_code)\n");
	if($avp(lia_return_code) != 1) {
		send_reply("500", "LIR failed");
		exit;
	}

	route(SELECT);
}

route[SELECT] {
	if(!I_scscf_select("0")) {
		# select failed
		I_scscf_drop();
		send_reply("500", "Server error on SCSCF Select (UAR)");
		exit;
	}

	route(RELAY);
}

route[RELAY] {
	# now relay to appropriate SCSCF
	if(!t_relay()) {
		send_reply_error();
	}
}
