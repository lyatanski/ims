services:
  hss:
    image: open5gs
    command: /opt/bin/open5gs-hssd -c /etc/hss/open5gs.yaml -t
    configs:
    - source: hss.yaml
      target: /etc/hss/open5gs.yaml
    - source: hss.diameter
      target: /etc/hss/diameter.conf
    volumes:
    - cert-hss:/var/hss
    expose:
    - 3868/tcp
    depends_on:
      cert-hss:
        condition: service_completed_successfully
      subscribers:
        condition: service_completed_successfully
    build:
      context: .
      dockerfile_inline: |
        FROM alpine AS build
        RUN apk add alpine-sdk bison flex git cmake meson bash sudo linux-headers bsd-compat-headers yaml-dev lksctp-tools-dev gnutls-dev libgcrypt-dev libidn-dev mongo-c-driver-dev libmicrohttpd-dev curl-dev nghttp2-dev talloc-dev
        RUN git clone --depth=1 https://github.com/open5gs/open5gs
        WORKDIR open5gs
        RUN meson build --prefix=/opt
        RUN ninja -C build install

        FROM alpine
        RUN apk add yaml lksctp-tools gnutls libgcrypt libidn mongo-c-driver libmicrohttpd curl nghttp2 talloc
        COPY --from=build /opt /opt

  cert-hss:
    image: certificate
    command: openssl req -new -batch -x509 -days 3650 -nodes -newkey rsa:1024 -out crt.pem -keyout key.pem -subj /CN=hss.epc.${REALM}
    working_dir: /var/hss
    volumes:
    - cert-hss:/var/hss
    build:
      context: .
      dockerfile_inline: |
        FROM alpine
        RUN apk add openssl

  subscribers:
    image: mongo:8.0
    entrypoint: mongosh --host mongo --file /opt/subscribers.js
    configs:
    - source: subscribers
      target: /opt/subscribers.js
    tmpfs:
    - /data/configdb
    - /data/db
    depends_on:
      mongo:
        condition: service_started
    restart: on-failure

  ui:
    profiles:
    - ui
    working_dir: /open5gs/webui
    command: npm run dev
    environment:
      DB_URI: mongodb://mongo/open5gs
      HOSTNAME: 0.0.0.0
    ports:
    - 9999:9999
    depends_on:
      subscribers:
        condition: service_completed_successfully
    build:
      context: .
      dockerfile_inline: |
        FROM alpine AS build
        RUN apk add git
        RUN git clone https://github.com/open5gs/open5gs

        FROM alpine
        RUN apk add nodejs npm
        COPY --from=build /open5gs/webui /open5gs/webui
        RUN cd /open5gs/webui && npm ci

  pcrf:
    image: open5gs
    command: /opt/bin/open5gs-pcrfd -c /etc/pcrf/open5gs.yaml -t
    configs:
    - source: pcrf.yaml
      target: /etc/pcrf/open5gs.yaml
    - source: pcrf.diameter
      target: /etc/pcrf/diameter.conf
    volumes:
    - cert-pcrf:/var/pcrf
    expose:
    - 3868/tcp
    depends_on:
      cert-pcrf:
        condition: service_completed_successfully

  cert-pcrf:
    image: certificate
    command: openssl req -new -batch -x509 -days 3650 -nodes -newkey rsa:1024 -out crt.pem -keyout key.pem -subj /CN=pcrf.epc.${REALM}
    working_dir: /var/pcrf
    volumes:
    - cert-pcrf:/var/pcrf

  smf:
    image: open5gs
    command: /opt/bin/open5gs-smf -c /etc/pcrf/open5gs.yaml -t
    configs:
    - source: smf.yaml
      target: /etc/smf/open5gs.yaml
    - source: smf.diameter
      target: /etc/smf/diameter.conf
    volumes:
    - cert-smf:/var/smf
    expose:
    - 3868/tcp
    depends_on:
      cert-smf:
        condition: service_completed_successfully

  cert-smf:
    image: certificate
    command: openssl req -new -batch -x509 -days 3650 -nodes -newkey rsa:1024 -out crt.pem -keyout key.pem -subj /CN=smf.epc.${REALM}
    working_dir: /var/smf
    volumes:
    - cert-smf:/var/smf

  upf:
    image: open5gs
    command: /opt/bin/open5gs-upf -c /etc/upf/open5gs.yaml -t
    configs:
    - source: upf.yaml
      target: /etc/upf/open5gs.yaml
    expose:
    - 8805/udp
    - 2152/udp

  mongo:
    image: mongo:8.0
    command: --bind_ip 0.0.0.0
    tmpfs:
    - /data/configdb
    - /data/db
    expose:
    - 27017/udp
    - 27017/tcp


configs:
  hss.yaml:
    content: |
      db_uri: mongodb://mongo/open5gs
      hss:
        freeDiameter: /etc/hss/diameter.conf
          #identity: hss.epc.${REALM}
          #load_extension:
          #- module: /opt/lib/freeDiameter/dbg_msg_dumps.fdx
          #  conf: 0x4444
          #- module: /opt/lib/freeDiameter/dict_rfc5777.fdx
          #- module: /opt/lib/freeDiameter/dict_mip6i.fdx
          #- module: /opt/lib/freeDiameter/dict_nasreq.fdx
          #- module: /opt/lib/freeDiameter/dict_nas_mipv6.fdx
          #- module: /opt/lib/freeDiameter/dict_dcca.fdx
          #- module: /opt/lib/freeDiameter/dict_dcca_3gpp.fdx
      logger:
        file:
          path: /var/log/hss.log
      global:
        max:
          ue: 1024

  hss.diameter:
    content: |
      Identity = "hss.epc.${REALM}";
      No_SCTP;
      TLS_Cred = "/var/hss/crt.pem", "/var/hss/key.pem";
      TLS_CA = "/var/hss/crt.pem";

      LoadExtension = "/opt/lib/freeDiameter/dbg_msg_dumps.fdx" : "0x4444";
      LoadExtension = "/opt/lib/freeDiameter/dict_rfc5777.fdx";
      LoadExtension = "/opt/lib/freeDiameter/dict_mip6i.fdx";
      LoadExtension = "/opt/lib/freeDiameter/dict_nasreq.fdx";
      LoadExtension = "/opt/lib/freeDiameter/dict_nas_mipv6.fdx";
      LoadExtension = "/opt/lib/freeDiameter/dict_dcca.fdx";
      LoadExtension = "/opt/lib/freeDiameter/dict_dcca_3gpp.fdx";

      ConnectPeer = "icscf.ims.${REALM}" { No_TLS; };
      ConnectPeer = "scscf.ims.${REALM}" { No_TLS; };

  pcrf.yaml:
    content: |
      logger:
        file:
          path: /var/log/pcrf.log
      global:
        max:
          ue: 1024
      pcrf:
        freeDiameter: /etc/pcrf/diameter.conf
        metrics:
          server:
          - address: 0.0.0.0
            port: 9090

  pcrf.diameter:
    content: |
      Identity = "pcrf.epc.${REALM}";
      No_SCTP;
      TLS_Cred = "/var/pcrf/crt.pem", "/var/pcrf/key.pem";
      TLS_CA = "/var/pcrf/crt.pem";

      LoadExtension = "/opt/lib/freeDiameter/dbg_msg_dumps.fdx" : "0x4444";
      LoadExtension = "/opt/lib/freeDiameter/dict_rfc5777.fdx";
      LoadExtension = "/opt/lib/freeDiameter/dict_mip6i.fdx";
      LoadExtension = "/opt/lib/freeDiameter/dict_nasreq.fdx";
      LoadExtension = "/opt/lib/freeDiameter/dict_nas_mipv6.fdx";
      LoadExtension = "/opt/lib/freeDiameter/dict_dcca.fdx";
      LoadExtension = "/opt/lib/freeDiameter/dict_dcca_3gpp.fdx";

      ConnectPeer = "pcscf.ims.${REALM}" { No_TLS; };
      ConnectPeer = "smf.epc.${REALM}" { No_TLS; };

  smf.yaml:
    content: |
      logger:
        file:
          path: /var/log/smf.log
      global:
        max:
          ue: 1024
      smf:
        metrics:
          server:
            - address: 0.0.0.0
              port: 9091
        pfcp:
          server:
            - address: 0.0.0.0
          client:
            upf:
              - address: upf
        gtpc:
          server:
            - address: 0.0.0.0
        session:
        - subnet: 10.10.0.0/16
          gateway: 10.10.0.1
          dnn: ims
        p-cscf:
        - PCSCF_IP

  smf.diameter:
    content: |
      Identity = "smf.epc.${REALM}";
      No_SCTP;
      TLS_Cred = "/var/smf/crt.pem", "/var/smf/key.pem";
      TLS_CA = "/var/smf/crt.pem";

      LoadExtension = "/opt/lib/freeDiameter/dbg_msg_dumps.fdx" : "0x4444";
      LoadExtension = "/opt/lib/freeDiameter/dict_rfc5777.fdx";
      LoadExtension = "/opt/lib/freeDiameter/dict_mip6i.fdx";
      LoadExtension = "/opt/lib/freeDiameter/dict_nasreq.fdx";
      LoadExtension = "/opt/lib/freeDiameter/dict_nas_mipv6.fdx";
      LoadExtension = "/opt/lib/freeDiameter/dict_dcca.fdx";
      LoadExtension = "/opt/lib/freeDiameter/dict_dcca_3gpp.fdx";

      ConnectPeer = "pcrf.epc.${REALM}" { No_TLS; };

  upf.yaml:
    content: |
      logger:
        file:
          path: /var/log/upf.log
      global:
        max:
          ue: 1024
      upf:
        metrics:
          server:
            - address: 0.0.0.0
              port: 9091
        pfcp:
          server:
            - address: 0.0.0.0
          client:
            smf:
              - address: smf
        gtpu:
          server:
            - address: 0.0.0.0
              advertise: 1.2.3.4
        session:
        - subnet: 10.10.0.0/16
          gateway: 10.10.0.1
          dnn: ims
          dev: tunue

  subscribers:
    content: |
      db = db.getSiblingDB('open5gs')
      for(i = 1; i <= ${SCALE}; i++){
        db.subscribers.insertOne(
        {
            _id: new ObjectId(),
            schema_version: NumberInt(1),
            imsi: '${MCC}${MNC}'+'000000000000000'.substring('${MCC}${MNC}'.length+`$${i}`.length)+`$${i}`,
            msisdn: ['${DIAL}'+'000000000'.substring(`$${i}`.length)+`$${i}`],
            imeisv: [],
            mme_host: [],
            mm_realm: [],
            purge_flag: [],
            slice:[
            {
                sst: NumberInt(1),
                default_indicator: true,
                session: [
                {
                    name : 'internet',
                    type : NumberInt(3),
                    qos : {
                        index: NumberInt(9),
                        arp: {
                            priority_level : NumberInt(8),
                            pre_emption_capability: NumberInt(1),
                            pre_emption_vulnerability: NumberInt(2)
                        }
                    },
                    ambr: {
                        downlink: { value: NumberInt(1000000000), unit: NumberInt(0) },
                        uplink: { value: NumberInt(1000000000), unit: NumberInt(0) }
                    },
                    pcc_rule: [],
                    _id: new ObjectId(),
                }],
                _id: new ObjectId(),
            }],
            security:
            {
                k : '${K}',
                op : null,
                opc : '${OPC}',
                amf : '8000',
            },
            ambr :
            {
                downlink : { value: NumberInt(1000000000), unit: NumberInt(0)},
                uplink : { value: NumberInt(1000000000), unit: NumberInt(0)}
            },
            access_restriction_data: 32,
            network_access_mode: 0,
            subscriber_status: 0,
            operator_determined_barring: 0,
            subscribed_rau_tau_timer: 12,
            __v: 0
        })
      }


volumes:
  cert-hss:
  cert-pcrf:
  cert-smf:
